/* RESISTORS.H */

#ifndef RESISTORS_H_
#define RESISTORS_H_

//#include <string.h>

#define NB_SERIES   4
#define MAX_ELEMS   576

// Enum for resistances series browsing
typedef enum { eE12 = 0, eE24 = 1, eE48 = 2, eE96 = 3 } eSerID;

// Serial number to name lookup
char* serName(int id){
    switch(id){
    case 0:
        return "E12";
    case 1:
        return "E24";
    case 2:
        return "E48";
    case 3:
        return "E96";
    default:
        return "ERROR";
    }
    return "ERR";
}

// Basic struct definition
typedef struct {
    int iNbElems;
    const double cdElems[MAX_ELEMS];
}st_Enn;

// Instanciate global array of structs
st_Enn stResSets[NB_SERIES];

//Initialize it
st_Enn stResSets[] = {  // E12
                        { .iNbElems = 72, .cdElems = {
                        1.0, 1.2, 1.5, 1.8, 2.2, 2.7, 3.3, 3.9, 4.7, 5.6, 6.8, 8.2,
                        10.0, 12.0, 15.0, 18.0, 22.0, 27.0, 33.0, 39.0, 47.0, 56.0,
                        68.0, 82.0, 100.0, 120.0, 150.0, 180.0, 220.0, 270.0, 330.0,
                        390.0, 470.0, 560.0, 680.0, 820.0, 1000.0, 1200.0, 1500.0,
                        1800.0, 2200.0, 2700.0, 3300.0, 3900.0, 4700.0, 5600.0,
                        6800.0, 8200.0, 10000.0, 12000.0, 15000.0, 18000.0, 22000.0,
                        27000.0, 33000.0, 39000.0, 47000.0, 56000.0, 68000.0, 82000.0,
                        100000.0, 120000.0, 150000.0, 180000.0, 220000.0, 270000.0,
                        330000.0, 390000.0, 470000.0, 560000.0, 680000.0, 820000.0 }},
                        //E24
                        { .iNbElems = 144, .cdElems = {
                        1.0, 1.1, 1.2, 1.3, 1.5, 1.6, 1.8, 2, 2.2, 2.4, 2.7, 3, 3.3, 3.6, 3.9,
                        4.3, 4.7, 5.1, 5.6, 6.2, 6.8, 7.5, 8.2, 9.1, 10.00, 11.00, 12.00,
                        13.00, 15.00, 16.00, 18.00, 20.00, 22.00, 24.00, 27.00, 30.00, 33.00,
                        36.00, 39.00, 43.00, 47.00, 51.00, 56.00, 62.00, 68.00, 75.00, 82.00,
                        91.00, 100.00, 110.00, 120.00, 130.00, 150.00, 160.00, 180.00, 200.00,
                        220.00, 240.00, 270.00, 300.00, 330.00, 360.00, 390.00, 430.00, 470.00,
                        510.00, 560.00, 620.00, 680.00, 750.00, 820.00, 910.00, 1000.00, 1100.00,
                        1200.00, 1300.00, 1500.00, 1600.00, 1800.00, 2000.00, 2200.00, 2400.00,
                        2700.00, 3000.00, 3300.00, 3600.00, 3900.00, 4300.00, 4700.00, 5100.00,
                        5600.00, 6200.00, 6800.00, 7500.00, 8200.00, 9100.00, 10000.00, 11000.00,
                        12000.00, 13000.00, 15000.00, 16000.00, 18000.00, 20000.00, 22000.00,
                        24000.00, 27000.00, 30000.00, 33000.00, 36000.00, 39000.00, 43000.00,
                        47000.00, 51000.00, 56000.00, 62000.00, 68000.00, 75000.00, 82000.00,
                        91000.00, 100000.0, 110000.0, 120000.0, 130000.0, 150000.0, 160000.0,
                        180000.0, 200000.0, 220000.0, 240000.0, 270000.0, 300000.0, 330000.0,
                        360000.0, 390000.0, 430000.0, 470000.0, 510000.0, 560000.0, 620000.0,
                        680000.0, 750000.0, 820000.0, 910000.0 }},
                        //E48
                        { .iNbElems = 288, .cdElems = {
                        1.0, 1.05, 1.1, 1.15, 1.21, 1.27, 1.33, 1.4, 1.47, 1.54, 1.62, 1.69,
                        1.78, 1.87, 1.96, 2.05, 2.15, 2.26, 2.37, 2.49, 2.61, 2.74, 2.87,3.01,
                        3.16, 3.32, 3.48, 3.65, 3.83, 4.02, 4.22, 4.42, 4.64, 4.87, 5.11, 5.36,
                        5.62, 5.9, 6.19, 6.49, 6.81, 7.15, 7.5, 7.87, 8.25, 8.66, 9.09, 9.53,
                        10.0, 10.5, 11.0, 11.5, 12.1, 12.7, 13.3, 14.0, 14.7, 15.4, 16.2, 16.9,
                        17.8, 18.7, 19.6, 20.5, 21.5, 22.6, 23.7, 24.9, 26.1, 27.4, 28.7, 30.1,
                        31.6, 33.2, 34.8, 36.5, 38.3, 40.2, 42.2, 44.2, 46.4, 48.7, 51.1, 53.6,
                        56.2, 59.0, 61.9, 64.9, 68.1, 71.5, 75.0, 78.7, 82.5, 86.6, 90.9, 95.3,
                        100.0, 105.0, 110.0, 115.0, 121.0, 127.0, 133.0, 140.0, 147.0, 154.0,
                        162.0, 169.0, 178.0, 187.0, 196.0, 205.0, 215.0, 226.0, 237.0, 249.0,
                        261.0, 274.0, 287.0, 301.0, 316.0, 332.0, 348.0, 365.0, 383.0, 402.0,
                        422.0, 442.0, 464.0, 487.0, 511.0, 536.0, 562.0, 590.0, 619.0, 649.0,
                        681.0, 715.0, 750.0, 787.0, 825.0, 866.0, 909.0, 953.0, 1000.0, 1050.0,
                        1100.0, 1150.0, 1210.0, 1270.0, 1330.0,1400.0, 1470.0, 1540.0, 1620.0,
                        1690.0, 1780.0, 1870.0, 1960.0, 2050.0, 2150.0, 2260.0, 2370.0, 2490.0,
                        2610.0, 2740.0, 2870.0, 3010.0, 3160.0, 3320.0, 3480.0, 3650.0, 3830.0,
                        4020.0, 4220.0, 4420.0, 4640.0, 4870.0, 5110.0, 5360.0, 5620.0, 5900.0,
                        6190.0, 6490.0, 6810.0, 7150.0, 7500.0, 7870.0, 8250.0, 8660.0, 9090.0,
                        9530.0, 10000.0, 10500.0, 11000.0, 11500.0, 12100.0, 12700.0, 13300.0,
                        14000.0, 14700.0, 15400.0, 16200.0, 16900.0, 17800.0, 18700.0, 19600.0,
                        20500.0, 21500.0, 22600.0, 23700.0, 24900.0, 26100.0, 27400.0, 28700.0,
                        30100.0, 31600.0, 33200.0, 34800.0, 36500.0, 38300.0, 40200.0, 42200.0,
                        44200.0, 46400.0, 48700.0, 51100.0, 53600.0, 56200.0, 59000.0, 61900.0,
                        64900.0, 68100.0, 71500.0, 75000.0, 78700.0, 82500.0, 86600.0, 90900.0,
                        95300.0, 100000.0, 105000.0, 110000.0, 115000.0, 121000.0, 127000.0,
                        133000.0, 140000.0, 147000.0, 154000.0, 162000.0, 169000.0, 178000.0,
                        187000.0, 196000.0, 205000.0, 215000.0, 226000.0, 237000.0, 249000.0,
                        261000.0, 274000.0, 287000.0, 301000.0, 316000.0, 332000.0, 348000.0,
                        365000.0, 383000.0, 402000.0, 422000.0, 442000.0, 464000.0, 487000.0,
                        511000.0, 536000.0, 562000.0, 590000.0, 619000.0, 649000.0, 681000.0,
                        715000.0, 750000.0, 787000.0, 825000.0, 866000.0, 909000.0, 953000.0} },
                        //E96
                        { .iNbElems = 576, .cdElems = {
                        1.00, 1.02, 1.05, 1.07, 1.10, 1.13, 1.15, 1.18, 1.21, 1.24, 1.27, 1.30,
                        1.33, 1.37, 1.40, 1.43, 1.47, 1.50, 1.54, 1.58, 1.62, 1.65, 1.69, 1.74,
                        1.78, 1.82, 1.87, 1.91, 1.96, 2.00, 2.05, 2.10, 2.15, 2.21, 2.26, 2.32,
                        2.37, 2.43, 2.49, 2.55, 2.61, 2.67, 2.74, 2.80, 2.87, 2.94, 3.01, 3.09,
                        3.16, 3.24, 3.32, 3.40, 3.48, 3.57, 3.65, 3.74, 3.83, 3.92, 4.02, 4.12,
                        4.22, 4.32, 4.42, 4.53, 4.64, 4.75, 4.87, 4.99, 5.11, 5.23, 5.36, 5.49,
                        5.62, 5.76, 5.90, 6.04, 6.19, 6.34, 6.49, 6.65, 6.81, 6.98, 7.15, 7.32,
                        7.50, 7.68, 7.87, 8.06, 8.25, 8.45, 8.66, 8.87, 9.09, 9.31, 9.53, 9.76,
                        10.0, 10.2, 10.5, 10.7, 11.0, 11.3, 11.5, 11.8, 12.1, 12.4, 12.7, 13.0,
                        13.3, 13.7, 14.0, 14.3, 14.7, 15.0, 15.4, 15.8, 16.2, 16.5, 16.9, 17.4,
                        17.8, 18.2, 18.7, 19.1, 19.6, 20.0, 20.5, 21.0, 21.5, 22.1, 22.6, 23.2,
                        23.7, 24.3, 24.9, 25.5, 26.1, 26.7, 27.4, 28.0, 28.7, 29.4, 30.1, 30.9,
                        31.6, 32.4, 33.2, 34.0, 34.8, 35.7, 36.5, 37.4, 38.3, 39.2, 40.2, 41.2,
                        42.2, 43.2, 44.2, 45.3, 46.4, 47.5, 48.7, 49.9, 51.1, 52.3, 53.6, 54.9,
                        56.2, 57.6, 59.0, 60.4, 61.9, 63.4, 64.9, 66.5, 68.1, 69.8, 71.5, 73.2,
                        75.0, 76.8, 78.7, 80.6, 82.5, 84.5, 86.6, 88.7, 90.9, 93.1, 95.3, 97.6,
                        100.0, 102.0, 105.0, 107.0, 110.0, 113.0, 115.0, 118.0, 121.0, 124.0, 127.0,
                        130.0, 133.0, 137.0, 140.0, 143.0, 147.0, 150.0, 154.0, 158.0, 162.0, 165.0,
                        169.0, 174.0, 178.0, 182.0, 187.0, 191.0, 196.0, 200.0, 205.0, 210.0, 215.0,
                        221.0, 226.0, 232.0, 237.0, 243.0, 249.0, 255.0, 261.0, 267.0, 274.0, 280.0,
                        287.0, 294.0, 301.0, 309.0, 316.0, 324.0, 332.0, 340.0, 348.0, 357.0, 365.0,
                        374.0, 383.0, 392.0, 402.0, 412.0, 422.0, 432.0, 442.0, 453.0, 464.0, 475.0,
                        487.0, 499.0, 511.0, 523.0, 536.0, 549.0, 562.0, 576.0, 590.0, 604.0, 619.0,
                        634.0, 649.0, 665.0, 681.0, 698.0, 715.0, 732.0, 750.0, 768.0, 787.0, 806.0,
                        825.0, 845.0, 866.0, 887.0, 909.0, 931.0, 953.0, 976.0, 1000.0, 1020.0, 1050.0,
                        1070.0, 1100.0, 1130.0, 1150.0, 1180.0, 1210.0, 1240.0, 1270.0, 1300.0, 1330.0,
                        1370.0, 1400.0, 1430.0, 1470.0, 1500.0, 1540.0, 1580.0, 1620.0, 1650.0, 1690.0,
                        1740.0, 1780.0, 1820.0, 1870.0, 1910.0, 1960.0, 2000.0, 2050.0, 2100.0, 2150.0,
                        2210.0, 2260.0, 2320.0, 2370.0, 2430.0, 2490.0, 2550.0, 2610.0, 2670.0, 2740.0,
                        2800.0, 2870.0, 2940.0, 3010.0, 3090.0, 3160.0, 3240.0, 3320.0, 3400.0, 3480.0,
                        3570.0, 3650.0, 3740.0, 3830.0, 3920.0, 4020.0, 4120.0, 4220.0, 4320.0, 4420.0,
                        4530.0, 4640.0, 4750.0, 4870.0, 4990.0, 5110.0, 5230.0, 5360.0, 5490.0, 5620.0,
                        5760.0, 5900.0, 6040.0, 6190.0, 6340.0, 6490.0, 6650.0, 6810.0, 6980.0, 7150.0,
                        7320.0, 7500.0, 7680.0, 7870.0, 8060.0, 8250.0, 8450.0, 8660.0, 8870.0, 9090.0,
                        9310.0, 9530.0, 9760.0, 10000.0, 10200.0, 10500.0, 10700.0, 11000.0, 11300.0,
                        11500.0, 11800.0, 12100.0, 12400.0, 12700.0, 13000.0, 13300.0, 13700.0, 14000.0,
                        14300.0, 14700.0, 15000.0, 15400.0, 15800.0, 16200.0, 16500.0, 16900.0, 17400.0,
                        17800.0, 18200.0, 18700.0, 19100.0, 19600.0, 20000.0, 20500.0, 21000.0, 21500.0,
                        22100.0, 22600.0, 23200.0, 23700.0, 24300.0, 24900.0, 25500.0, 26100.0, 26700.0,
                        27400.0, 28000.0, 28700.0, 29400.0, 30100.0, 30900.0, 31600.0, 32400.0, 33200.0,
                        34000.0, 34800.0, 35700.0, 36500.0, 37400.0, 38300.0, 39200.0, 40200.0, 41200.0,
                        42200.0, 43200.0, 44200.0, 45300.0, 46400.0, 47500.0, 48700.0, 49900.0, 51100.0,
                        52300.0, 53600.0, 54900.0, 56200.0, 57600.0, 59000.0, 60400.0, 61900.0, 63400.0,
                        64900.0, 66500.0, 68100.0, 69800.0, 71500.0, 73200.0, 75000.0, 76800.0, 78700.0,
                        80600.0, 82500.0, 84500.0, 86600.0, 88700.0, 90900.0, 93100.0, 95300.0, 97600.0,
                        100000.0, 102000.0, 105000.0, 107000.0, 110000.0, 113000.0, 115000.0, 118000.0,
                        121000.0, 124000.0, 127000.0, 130000.0, 133000.0, 137000.0, 140000.0, 143000.0,
                        147000.0, 150000.0, 154000.0, 158000.0, 162000.0, 165000.0, 169000.0, 174000.0,
                        178000.0, 182000.0, 187000.0, 191000.0, 196000.0, 200000.0, 205000.0, 210000.0,
                        215000.0, 221000.0, 226000.0, 232000.0, 237000.0, 243000.0, 249000.0, 255000.0,
                        261000.0, 267000.0, 274000.0, 280000.0, 287000.0, 294000.0, 301000.0, 309000.0,
                        316000.0, 324000.0, 332000.0, 340000.0, 348000.0, 357000.0, 365000.0, 374000.0,
                        383000.0, 392000.0, 402000.0, 412000.0, 422000.0, 432000.0, 442000.0, 453000.0,
                        464000.0, 475000.0, 487000.0, 499000.0, 511000.0, 523000.0, 536000.0, 549000.0,
                        562000.0, 576000.0, 590000.0, 604000.0, 619000.0, 634000.0, 649000.0, 665000.0,
                        681000.0, 698000.0, 715000.0, 732000.0, 750000.0, 768000.0, 787000.0, 806000.0,
                        825000.0, 845000.0, 866000.0, 887000.0, 909000.0, 931000.0, 953000.0, 976000.0} }
                        };

//For loop limit purpose...
int get_nb_series(void){
    return NB_SERIES;
}


#endif // RESISTORS_H_


